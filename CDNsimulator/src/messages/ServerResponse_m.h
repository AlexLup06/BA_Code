//
// Generated file, do not edit! Created by opp_msgtool 6.0 from messages/ServerResponse.msg.
//

#ifndef __INET_SERVERRESPONSE_M_H
#define __INET_SERVERRESPONSE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif


namespace inet {

class ServerResponse;

}  // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/Units_m.h" // import inet.common.Units

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk


namespace inet {

/**
 * Class generated from <tt>messages/ServerResponse.msg:7</tt> by opp_msgtool.
 * <pre>
 * class ServerResponse extends FieldsChunk
 * {
 *     short statusCode;
 *     int requestedObjectId;
 *     long size;
 * }
 * </pre>
 */
class ServerResponse : public ::inet::FieldsChunk
{
  protected:
    short statusCode = 0;
    int requestedObjectId = 0;
    long size = 0;

  private:
    void copy(const ServerResponse& other);

  protected:
    bool operator==(const ServerResponse&) = delete;

  public:
    ServerResponse();
    ServerResponse(const ServerResponse& other);
    virtual ~ServerResponse();
    ServerResponse& operator=(const ServerResponse& other);
    virtual ServerResponse *dup() const override {return new ServerResponse(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual short getStatusCode() const;
    virtual void setStatusCode(short statusCode);

    virtual int getRequestedObjectId() const;
    virtual void setRequestedObjectId(int requestedObjectId);

    virtual long getSize() const;
    virtual void setSize(long size);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ServerResponse& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ServerResponse& obj) {obj.parsimUnpack(b);}


}  // namespace inet


namespace omnetpp {

template<> inline inet::ServerResponse *fromAnyPtr(any_ptr ptr) { return check_and_cast<inet::ServerResponse*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __INET_SERVERRESPONSE_M_H

